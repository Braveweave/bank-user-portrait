<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.forthelight.dao.CourseDao">

	<resultMap type="Course" id="CourseResultMap" autoMapping="true">
	
		<id property="id" column="id" />

		<association property="college" column="collegeid" javaType="College" 
		    select="com.forthelight.dao.CollegeDao.findById" autoMapping="true">
			<id property="id" column="id" />
		</association>

		<association property="major" column="majorid" javaType="Major"
		    select="com.forthelight.dao.MajorDao.findById" autoMapping="true" >
			<id property="id" column="id" />
		</association>

		<association property="teacher" column="teacherid" javaType="Teacher"
		    select="com.forthelight.dao.TeacherDao.findById" autoMapping="true" >
			<id property="id" column="id" />
		</association>
		
		<collection property="courseTimes" column = "id" ofType="CourseTime" 
		    select="com.forthelight.dao.CourseTimeDao.findByClassId" autoMapping="true" >
		</collection>
		
		<collection property="students" column = "id" ofType="Student" 
		    select="com.forthelight.dao.StudentDao.findByCourseId" autoMapping="true" >
		</collection>
		
	</resultMap>




	<select id="findById" parameterType="int" resultMap="CourseResultMap">
		select * from Course 
		where Course.id = #{id} and deleteStatus = 0
	</select>
	
	<select id="findByCode" parameterType="String" resultMap="CourseResultMap">
		select * from Course
		where courseCode = #{courseCode} and deleteStatus = 0
	</select>
	
	<select id="findByCourseName" parameterType="String" resultMap="CourseResultMap" >
	    select * from Course
		where courseName = #{courseName} and deleteStatus = 0
	</select>
	
	<select id="findByTeacherName" parameterType="Teacher" resultMap="CourseResultMap" >
	    select * from Course
		where teacherId in ( select id from Teacher where teacherName = #{teacherName} and deleteStatus = 0 ) and deleteStatus = 0
	</select>
	
	<select id="findByLevel" parameterType="String" resultMap="CourseResultMap" >
	    select * from Course
		where level = #{level} and deleteStatus = 0
	</select> 
	
	<select id="findAll" resultMap="CourseResultMap" >
	    select * from Course
		where deleteStatus = 0
	</select>
	
	<update id="update" parameterType="Course" >
	    update Course 
	    set CourseCode = #{courseCode} , CourseName = #{courseName} , teacherId = #{teacher.id} ,
	    studentNumber = #{studentNumber} , startWeek = #{startWeek} , endWeek = #{endWeek} , isSingleWeek = #{isSingleWeek} , 
	    credit = #{credit} , examiningForm = #{examiningForm} , collegeId = #{college.id} , majorId = #{major.id} , 
	    level = #{level} , hasMidExam = #{hasMidExam} ,midExamWeight = #{midExamWeight} , finalExamWeight = #{finalExamWeight} ,
	    passingCourse = #{passingCourse}
	    where id = #{id}
	</update>
	
	<update id="delete" parameterType="int" >
	    update Course set deleteStatus = 1 
	    where id = #{id}
	</update>
	
	<insert id="insert" parameterType="Course" >
	    insert into Course values 
	    ( null , #{courseCode} , #{courseName} , #{teacher.id} , #{studentNumber} , 
	    #{startWeek} , #{endWeek} , #{isSingleWeek} , #{credit} , #{examiningForm} , #{college.id} , 
	    #{major.id} , #{level} , 0 , #{hasMidExam} , #{finalExamWeight} , #{midExamWeight} , #{passingCourse} )
	</insert>

    <insert id="setTime" keyColumn="id" useGeneratedKeys="true">
        insert into course_time
        (ClassId, StartLesson, EndLesson, LessonDay) VALUES
            (#{course.id}, #{startTime}, #{endTime}, #{lessonDay});
    </insert>
	
	<select id="findByTeacherId" parameterType="int" resultMap="CourseResultMap" >
	    select * from Course 
	    where teacherId = #{teacherId} and deleteStatus = 0
	</select>
	
	<select id="findByCollegeId" parameterType="int" resultMap="CourseResultMap" >
	    select * from Course
	    where collegeId = #{collegeId} and deleteStatus = 0
	</select>
	
	<select id="findByCourseTimeId" parameterType="int" resultMap="CourseResultMap" >
	    select * from Course
	    where id in ( select classId from Course_time where id = #{courseTimeId} and deleteStatus = 0 ) and deleteStatus = 0
	</select>
	
	<select id="findByMajorId" parameterType="int" resultMap="CourseResultMap" >
	    select * from Course
	    where majorId = #{majorId}
	</select>
	
	<select id="findByStudentId" parameterType="int" resultMap="CourseResultMap" >
	    select * from Course
	    where id in ( select courseId from student_select_course where studentId = #{studentId} and deleteStatus = 0 ) and deleteStatus = 0
	</select>
	
	<select id="orderByLike" resultMap="CourseResultMap" >
	    select * from 
	    ( ( Course inner join student_select_course on Course.id = courseId ) )
	    inner join student_comment_course on selectId = student_select_course.id
	    group by Course.id 
	    order by LikeNumber desc
	</select>
	
	<select id="likeNumber" parameterType="int" resultType="Integer">
	    select sum(likeNumber) from student_comment_course
	    where selectId in ( select id from student_select_course where courseId = #{id}
	     and student_select_course.DeleteStatus = 0 ) and student_comment_course.deleteStatus = 0
	</select>
	
	<select id="oneTagNumber"  resultType="int" >
	    select count(*) from comment_tag
	    where tagId = #{arg0} and commentId in ( select id from student_comment_course 
	    where selectId in ( select id from student_select_course where courseId = #{arg1} 
	    and deleteStatus = 0 ) and deleteStatus = 0 ) and deleteStatus = 0
	</select>
	
	<select id="tagList" parameterType="int" resultType="Tag" >
	    select * from tag
	    where id in (
			select tagId from comment_tag where
	    	commentId in (
				select id from student_comment_course where selectId in (
					select id from student_select_course where courseId = #{courseId}
	    			and student_select_course.DeleteStatus = 0
					) and student_comment_course.deleteStatus = 0
			) and comment_tag.DeleteStatus = 0
	) and deleteStatus = 0
	</select>


	<select id="selectByKeyword" resultMap="CourseResultMap">
		select * from Course
		where ( courseCode like '%${_parameter}%' or courseName like '%${_parameter}%' )
		and deleteStatus = 0
	</select>

	<select id="findCourseOfAdmin" resultMap="CourseResultMap">
		select * from Course
		where deleteStatus = 0
		<if test="courseType != null">
			and level = #{courseType}
		</if>
		<if test="teacherName != null">
			and teacherId in ( select id from Teacher where teacherName = #{teacherName} and deleteStatus = 0 )
		</if>
		<if test="examType != -1">
			and examiningForm = #{examType}
		</if>
		<if test="courseName != null">
			and courseName = #{courseName}
		</if>
	</select>

	<select id="findByStudentIdAndTeacherName" resultMap="CourseResultMap">
		select * from Course
		where teacherId in ( select id from Teacher where teacherName = #{arg1} and deleteStatus = 0)
		and id in ( select courseId from student_select_course where studentId = #{arg0} and deleteStatus = 0 )
		and deleteStatus = 0
	</select>

	<select id="findByStudentIdAndCourseCode" resultMap="CourseResultMap">
		select * from Course
		where courseCode = #{arg1} and
		id in ( select courseId from student_select_course where studentId = #{arg0}
		 and deleteStatus = 0) and deleteStatus = 0
	</select>

	<select id="findByCourseAndTeacher" resultMap="CourseResultMap">
		select * from Course
		where deleteStatus = 0
		<if test="courseName != null">
			and courseName = #{courseName}
		</if>
		<if test="teacherName != null">
			and teacherId in
			( select id from Teacher where teacherName = #{teacherName} and deleteStatus = 0 )
		</if>
		<if test="studentId > 0">
			and id in ( select courseId from student_select_course where studentId = #{studentId}
			and deleteStatus = 0 )
		</if>
	</select>

	<select id="findByTeacherNameAndCourseName" resultMap="CourseResultMap">
		select * from Course
		where courseName = #{arg1} and teacherId in
		( select id from Teacher where teacherName = #{arg0} and deleteStatus = 0 )
		and deleteStatus = 0
	</select>
	
	<select id="findByTeacherCourseExamPass" resultMap="CourseResultMap">
		select * from Course
		where deleteStatus = 0
		<if test="courseName != null">
			and courseName = #{courseName}
		</if>
		<if test="teacherName != null">
			and teacherId in
			( select id from Teacher where teacherName = #{teacherName} and deleteStatus = 0 )
		</if>
		<if test="examType != -1">
			and examiningForm = #{examType}
		</if>
		<if test="passType != -1">
			and passingCourse = #{passType}
		</if>
	</select>

	<select id="findRecommendCourse" resultMap="CourseResultMap">
		select * from Course
		where
		( collegeId = 7 or
		( collegeId = #{collegeId} and majorId = null ) or
		( collegeId = #{collegeId} and majorId = #{majorId} ) )
		and deleteStatus = 0
	</select>

	<select id="findSelectCourse" resultMap="CourseResultMap">
		select * from Course
		where
		( level = "e" or
		( level = "D" and
		( ( collegeId = #{collegeId} and MajorId = null ) or
		( collegeId = {#collegeId} and majorId = #{majorId} ) ) ) )
	</select>
</mapper>