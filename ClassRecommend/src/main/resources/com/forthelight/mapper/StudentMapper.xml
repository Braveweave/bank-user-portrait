<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.forthelight.dao.StudentDao">
	<resultMap id="StudentResultMap" type="Student" autoMapping="true">
		<id column="id" property="id" />
		<association property="college" column="collegeId" autoMapping="true" javaType="College"
			select="com.forthelight.dao.CollegeDao.findById" />
		<association property="major" column="MajorID" javaType="Major" autoMapping="true"
			select="com.forthelight.dao.MajorDao.findById" />
		<collection property="courses" column="id" ofType="Course" autoMapping="true"
			select="com.forthelight.dao.CourseDao.findByStudentId" />
		<collection property="files" column="id" ofType="File" autoMapping="true"
			select="com.forthelight.dao.FileDao.findByStudentId" />
	</resultMap>



	<select id="findById" parameterType="int" resultMap="StudentResultMap">
		SELECT * FROM student 
		WHERE id=#{id} AND DeleteStatus=0;
	</select>
	
	<select id="findByMajorId" resultMap="StudentResultMap" parameterType="int">
		SELECT * FROM student 
		WHERE DeleteStatus=0 AND MajorID=#{majorId};
	</select>
	
	<select id="findByCollegeId" parameterType="int" resultMap="StudentResultMap" >
	    select * from Student
	    where collegeId = #{collegeId} and deleteStatus = 0
	</select>

	<select id="findByStudentNumber" parameterType="String" resultMap="StudentResultMap">
		SELECT * FROM student WHERE DeleteStatus=0 AND StudentNumber=#{studentNumber};
	</select>

	<select id="findByNickName" parameterType="String" resultMap="StudentResultMap">
		SELECT * FROM student WHERE DeleteStatus=0 AND NickName=#{NickName};
	</select>

	<select id="findByCourseId" parameterType="int" resultMap="StudentResultMap" >
	    select * from student
	    where id in 
	    ( select studentId from student_select_course where courseId = #{courseId} and deleteStatus = 0 )
	    and deleteStatus = 0
	</select>

	<select id="findByName" parameterType="String" resultMap="StudentResultMap">
		SELECT * FROM student WHERE deleteStatus=0 AND studentName=#{studentName};
	</select>


    <select id="findAll" resultMap="StudentResultMap">
	    select * from student
	    where deleteStatus = 0
	</select>

	<select id="findByKeyword" resultMap="StudentResultMap" >
        select *
        from
            ((student
                inner join college on collegeId = college.id)
	    inner join major on majorId = major.id )
	    where ( studentName like '%${_parameter}%' or studentNumber like '%${_parameter}%' or collegeName like '%${_parameter}%' or majorName like '%${_parameter}%' )
	    and student.deleteStatus = 0 and college.deleteStatus = 0 and major.deleteStatus = 0
	</select>

    <select id="getSelectId" resultType="int">
        SELECT student_select_course.id
        FROM student_select_course
        WHERE StudentID = #{student.id} AND CourseID = #{course.id}
    </select>


    <insert id="insert" parameterType="Student">
        INSERT INTO student
        (id, StudentName, Gender, NickName, Password, StudentNumber, Grade, CollegeID, MajorID, Privilege, DeleteStatus, studentPortrait)
        VALUES
            (NULL, #{studentName}, #{gender}, #{nickName}, #{password}, #{studentNumber}, #{grade}, #{college.id},
                   #{major.id}, #{privilege}, 0, #{studentPortrait});
    </insert>

    <insert id="selectCourse" keyColumn="id" useGeneratedKeys="true">
        INSERT INTO student_select_course
        (id, StudentID, CourseID, DeleteStatus) VALUES
            (null, #{student.id}, #{course.id}, 0);
    </insert>


    <update id="update" parameterType="Student">
        update student
        set
            gender    = #{gender}, nickName = #{nickName}, password = #{password},
            collegeId = #{college.id}, majorId = #{major.id}, studentPortrait = #{studentPortrait}
        where id = #{id}
    </update>

    <update id="delete" parameterType="int">
	    update student set deleteStatus = 1
	    where id = #{id}
	</update>

	<select id="selectCourseNumber" resultType="int" parameterType="int">
		select count(*) from
		student_select_course where studentId = #{studentId} and deleteStatus = 0
	</select>

	<select id="commentCourseNumber" resultType="int" parameterType="int">
		select count(*) from
		student_comment_course
		where selectId in
		(select studentId from student_select_course
		where studentId = #{studentId} and deleteStatus = 0 ) and deleteStatus = 0
	</select>
	
</mapper>